<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script type="text/javascript">
    $.expr[':'].attrCaseInsensitive = function(node, stackIndex, properties){
        var args = properties[3].split(',').map(function(arg) {
            return arg.replace(/^\s*["']|["']\s*$/g, '');  
        });
        if ($(node).attr(args[0]) && args[1]) {
            return $(node).attr(args[0]).toLowerCase() == args[1].toLowerCase();
        }
        return false;
    };

    var settings = {
        validClass: "is-valid",
        errorClass: "is-invalid",
        errorElement: 'span',
        errorPlacement: function (error, element) {
            error.addClass('invalid-feedback');
            $(element).closest('.input-group').children("span:attrCaseInsensitive(data-valmsg-for, '" + $(element).attr("name") + "')").attr('class', error.attr('class')
            ).show();
            $(element).closest('.input-group')
                .children("span:attrCaseInsensitive(data-valmsg-for, '" + $(element).attr("name") + "')").attr('class',
                    error.attr('class')
                ).html(error.text());
       
            $(element).closest('.input-group').find('.field-validation-error').removeClass('d-lg-none');
        },
        highlight: function (element, errorClass, validClass) {
            
            $(element).addClass('is-invalid');
            $(element).closest('.input-group').find('.input-group-prepend span').addClass('border-danger');
        },
        unhighlight: function (element, errorClass, validClass) {
            
            if (formGroupIsValid)
                formGroup.removeClass('has-error');
            $(element).removeClass('is-invalid');
            $(element).closest('.input-group').find('.field-validation-valid').addClass('d-lg-none');
            $(element).closest('.input-group').find('.input-group-prepend span').removeClass('border-danger');
            var formGroup = $(element).closest('.input-group');
            var formGroupIsValid = true;
            formGroup.find('input, select').each(function () {
                if (!$(this).is($(element))) {
                    if (!$(this).valid())
                    formGroupIsValid = false;
                }
            });
            @*$(element).closest('.input-group').find('.form-control').valid();*@
        }
    }
    $.validator.setDefaults(settings);
    $.validator.unobtrusive.options = settings;

</script>